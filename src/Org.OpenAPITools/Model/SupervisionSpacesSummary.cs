/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SupervisionSpacesSummary
    /// </summary>
    [DataContract(Name = "SupervisionSpacesSummary")]
    public partial class SupervisionSpacesSummary : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SupervisionSpacesSummary" /> class.
        /// </summary>
        /// <param name="allParticipants">Indicates if the supervision space contains all the participants in the org.</param>
        /// <param name="allUsers">Indicates if the supervision space contains all the users in the org.</param>
        /// <param name="canDelete">Indicates if the supervision space can be deleted.</param>
        /// <param name="canEnableAllParticipants">Indicates if the supervision space can add all participants. Only one supervision space can have all participants enabled..</param>
        /// <param name="createdAt">The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        /// <param name="description">The description of the supervision space given when created.</param>
        /// <param name="directoryGroups">An array of directory groups.</param>
        /// <param name="disabled">Indicates if supervision space is turned on or off.</param>
        /// <param name="entryStrategiesCount">The count of SWRV rules that include this supervision space.</param>
        /// <param name="hardEnforce">Indicates if users can be assigned records from other supervision spaces.</param>
        /// <param name="id">The supervision space ID.</param>
        /// <param name="integrations">An array of integrations associated with this supervision space.</param>
        /// <param name="mediaTypes">An array of media types included in this supervision space.</param>
        /// <param name="name">The supervision space name.</param>
        /// <param name="participantCount">The number of participants in the supervision space.</param>
        /// <param name="recordCount">The number of records uploaded to this supervision space. This field is deprecated..</param>
        /// <param name="retentionLibraries">An array of retention libraries associated with this supervision space.</param>
        /// <param name="reviewerCount">The number of reviewers assigned to the supervision space.</param>
        /// <param name="supervisionSpacePriority">The priority of assigning records to a supervision space.</param>
        /// <param name="updatedAt">The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        public SupervisionSpacesSummary(bool allParticipants = default(bool), bool allUsers = default(bool), bool canDelete = default(bool), bool canEnableAllParticipants = default(bool), DateTime createdAt = default(DateTime), string description = default(string), List<SupervisionSpacesSummaryDirectoryGroupsInner> directoryGroups = default(List<SupervisionSpacesSummaryDirectoryGroupsInner>), bool disabled = default(bool), int entryStrategiesCount = default(int), bool hardEnforce = default(bool), int id = default(int), List<IntegrationsInner> integrations = default(List<IntegrationsInner>), List<MediaTypesInner> mediaTypes = default(List<MediaTypesInner>), string name = default(string), int participantCount = default(int), int recordCount = default(int), List<RetentionLibrariesInner> retentionLibraries = default(List<RetentionLibrariesInner>), int reviewerCount = default(int), int supervisionSpacePriority = default(int), DateTime updatedAt = default(DateTime))
        {
            this.AllParticipants = allParticipants;
            this.AllUsers = allUsers;
            this.CanDelete = canDelete;
            this.CanEnableAllParticipants = canEnableAllParticipants;
            this.CreatedAt = createdAt;
            this.Description = description;
            this.DirectoryGroups = directoryGroups;
            this.Disabled = disabled;
            this.EntryStrategiesCount = entryStrategiesCount;
            this.HardEnforce = hardEnforce;
            this.Id = id;
            this.Integrations = integrations;
            this.MediaTypes = mediaTypes;
            this.Name = name;
            this.ParticipantCount = participantCount;
            this.RecordCount = recordCount;
            this.RetentionLibraries = retentionLibraries;
            this.ReviewerCount = reviewerCount;
            this.SupervisionSpacePriority = supervisionSpacePriority;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Indicates if the supervision space contains all the participants in the org
        /// </summary>
        /// <value>Indicates if the supervision space contains all the participants in the org</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "all_participants", EmitDefaultValue = true)]
        public bool AllParticipants { get; set; }

        /// <summary>
        /// Indicates if the supervision space contains all the users in the org
        /// </summary>
        /// <value>Indicates if the supervision space contains all the users in the org</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "all_users", EmitDefaultValue = true)]
        public bool AllUsers { get; set; }

        /// <summary>
        /// Indicates if the supervision space can be deleted
        /// </summary>
        /// <value>Indicates if the supervision space can be deleted</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "can_delete", EmitDefaultValue = true)]
        public bool CanDelete { get; set; }

        /// <summary>
        /// Indicates if the supervision space can add all participants. Only one supervision space can have all participants enabled.
        /// </summary>
        /// <value>Indicates if the supervision space can add all participants. Only one supervision space can have all participants enabled.</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "can_enable_all_participants", EmitDefaultValue = true)]
        public bool CanEnableAllParticipants { get; set; }

        /// <summary>
        /// The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2021-06-16T01:37:04.262Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// The description of the supervision space given when created
        /// </summary>
        /// <value>The description of the supervision space given when created</value>
        /*
        <example>All central time employees</example>
        */
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// An array of directory groups
        /// </summary>
        /// <value>An array of directory groups</value>
        [DataMember(Name = "directory_groups", EmitDefaultValue = false)]
        public List<SupervisionSpacesSummaryDirectoryGroupsInner> DirectoryGroups { get; set; }

        /// <summary>
        /// Indicates if supervision space is turned on or off
        /// </summary>
        /// <value>Indicates if supervision space is turned on or off</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "disabled", EmitDefaultValue = true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// The count of SWRV rules that include this supervision space
        /// </summary>
        /// <value>The count of SWRV rules that include this supervision space</value>
        /*
        <example>0</example>
        */
        [DataMember(Name = "entry_strategies_count", EmitDefaultValue = false)]
        public int EntryStrategiesCount { get; set; }

        /// <summary>
        /// Indicates if users can be assigned records from other supervision spaces
        /// </summary>
        /// <value>Indicates if users can be assigned records from other supervision spaces</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "hard_enforce", EmitDefaultValue = true)]
        public bool HardEnforce { get; set; }

        /// <summary>
        /// The supervision space ID
        /// </summary>
        /// <value>The supervision space ID</value>
        /*
        <example>12</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// An array of integrations associated with this supervision space
        /// </summary>
        /// <value>An array of integrations associated with this supervision space</value>
        [DataMember(Name = "integrations", EmitDefaultValue = false)]
        public List<IntegrationsInner> Integrations { get; set; }

        /// <summary>
        /// An array of media types included in this supervision space
        /// </summary>
        /// <value>An array of media types included in this supervision space</value>
        [DataMember(Name = "media_types", EmitDefaultValue = false)]
        public List<MediaTypesInner> MediaTypes { get; set; }

        /// <summary>
        /// The supervision space name
        /// </summary>
        /// <value>The supervision space name</value>
        /*
        <example>Central Time</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The number of participants in the supervision space
        /// </summary>
        /// <value>The number of participants in the supervision space</value>
        /*
        <example>5</example>
        */
        [DataMember(Name = "participant_count", EmitDefaultValue = false)]
        public int ParticipantCount { get; set; }

        /// <summary>
        /// The number of records uploaded to this supervision space. This field is deprecated.
        /// </summary>
        /// <value>The number of records uploaded to this supervision space. This field is deprecated.</value>
        /*
        <example>1245</example>
        */
        [DataMember(Name = "record_count", EmitDefaultValue = false)]
        public int RecordCount { get; set; }

        /// <summary>
        /// An array of retention libraries associated with this supervision space
        /// </summary>
        /// <value>An array of retention libraries associated with this supervision space</value>
        [DataMember(Name = "retention_libraries", EmitDefaultValue = false)]
        public List<RetentionLibrariesInner> RetentionLibraries { get; set; }

        /// <summary>
        /// The number of reviewers assigned to the supervision space
        /// </summary>
        /// <value>The number of reviewers assigned to the supervision space</value>
        /*
        <example>123</example>
        */
        [DataMember(Name = "reviewer_count", EmitDefaultValue = false)]
        public int ReviewerCount { get; set; }

        /// <summary>
        /// The priority of assigning records to a supervision space
        /// </summary>
        /// <value>The priority of assigning records to a supervision space</value>
        /*
        <example>3</example>
        */
        [DataMember(Name = "supervision_space_priority", EmitDefaultValue = false)]
        public int SupervisionSpacePriority { get; set; }

        /// <summary>
        /// The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2022-10-12T02:29:49.146Z</example>
        */
        [DataMember(Name = "updated_at", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SupervisionSpacesSummary {\n");
            sb.Append("  AllParticipants: ").Append(AllParticipants).Append("\n");
            sb.Append("  AllUsers: ").Append(AllUsers).Append("\n");
            sb.Append("  CanDelete: ").Append(CanDelete).Append("\n");
            sb.Append("  CanEnableAllParticipants: ").Append(CanEnableAllParticipants).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DirectoryGroups: ").Append(DirectoryGroups).Append("\n");
            sb.Append("  Disabled: ").Append(Disabled).Append("\n");
            sb.Append("  EntryStrategiesCount: ").Append(EntryStrategiesCount).Append("\n");
            sb.Append("  HardEnforce: ").Append(HardEnforce).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Integrations: ").Append(Integrations).Append("\n");
            sb.Append("  MediaTypes: ").Append(MediaTypes).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ParticipantCount: ").Append(ParticipantCount).Append("\n");
            sb.Append("  RecordCount: ").Append(RecordCount).Append("\n");
            sb.Append("  RetentionLibraries: ").Append(RetentionLibraries).Append("\n");
            sb.Append("  ReviewerCount: ").Append(ReviewerCount).Append("\n");
            sb.Append("  SupervisionSpacePriority: ").Append(SupervisionSpacePriority).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
