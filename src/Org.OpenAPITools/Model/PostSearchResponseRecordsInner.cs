/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PostSearchResponseRecordsInner
    /// </summary>
    [DataContract(Name = "PostSearchResponse_records_inner")]
    public partial class PostSearchResponseRecordsInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostSearchResponseRecordsInner" /> class.
        /// </summary>
        /// <param name="contentSource">The content source of the record.</param>
        /// <param name="contentType">The content-type of the data. Uses standard [MIME types](https://www.iana.org/assignments/media-types/media-types.xhtml).</param>
        /// <param name="createDate">The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        /// <param name="hashSha256">The record&#39;s SHA256 hash.</param>
        /// <param name="id">The record ID.</param>
        /// <param name="originalFileName">The record&#39;s filename.</param>
        /// <param name="recordSize">The record&#39;s file size in bytes.</param>
        /// <param name="risk">The record&#39;s risk.</param>
        /// <param name="uploadDate">Record upload timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        /// <param name="uuid">The record&#39;s UUID. This UUID matches the portal record ID.</param>
        /// <param name="platformAttributes">A map of key value pairs of the records platform attributes.</param>
        /// <param name="participants">The record&#39;s participants.</param>
        public PostSearchResponseRecordsInner(string contentSource = default(string), string contentType = default(string), DateTime createDate = default(DateTime), string hashSha256 = default(string), int id = default(int), string originalFileName = default(string), int recordSize = default(int), string risk = default(string), DateTime uploadDate = default(DateTime), string uuid = default(string), Object platformAttributes = default(Object), Dictionary<string, List<SchemasParticipantInner>> participants = default(Dictionary<string, List<SchemasParticipantInner>>))
        {
            this.ContentSource = contentSource;
            this.ContentType = contentType;
            this.CreateDate = createDate;
            this.HashSha256 = hashSha256;
            this.Id = id;
            this.OriginalFileName = originalFileName;
            this.RecordSize = recordSize;
            this.Risk = risk;
            this.UploadDate = uploadDate;
            this.Uuid = uuid;
            this.PlatformAttributes = platformAttributes;
            this.Participants = participants;
        }

        /// <summary>
        /// The content source of the record
        /// </summary>
        /// <value>The content source of the record</value>
        /*
        <example>microsoft_teams</example>
        */
        [DataMember(Name = "content_source", EmitDefaultValue = false)]
        public string ContentSource { get; set; }

        /// <summary>
        /// The content-type of the data. Uses standard [MIME types](https://www.iana.org/assignments/media-types/media-types.xhtml)
        /// </summary>
        /// <value>The content-type of the data. Uses standard [MIME types](https://www.iana.org/assignments/media-types/media-types.xhtml)</value>
        /*
        <example>video/mp4</example>
        */
        [DataMember(Name = "content_type", EmitDefaultValue = false)]
        public string ContentType { get; set; }

        /// <summary>
        /// The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2021-06-16T01:37:04.262Z</example>
        */
        [DataMember(Name = "create_date", EmitDefaultValue = false)]
        public DateTime CreateDate { get; set; }

        /// <summary>
        /// The record&#39;s SHA256 hash
        /// </summary>
        /// <value>The record&#39;s SHA256 hash</value>
        /*
        <example>5179a08ff65e6388a466447dd1c6ee5fae0c9b080ec3a61e21cd6818ed1d8624</example>
        */
        [DataMember(Name = "hash_sha256", EmitDefaultValue = false)]
        public string HashSha256 { get; set; }

        /// <summary>
        /// The record ID
        /// </summary>
        /// <value>The record ID</value>
        /*
        <example>215779</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The record&#39;s filename
        /// </summary>
        /// <value>The record&#39;s filename</value>
        /*
        <example>Call Between Jim and Pam.mp3</example>
        */
        [DataMember(Name = "original_file_name", EmitDefaultValue = false)]
        public string OriginalFileName { get; set; }

        /// <summary>
        /// The record&#39;s file size in bytes
        /// </summary>
        /// <value>The record&#39;s file size in bytes</value>
        /*
        <example>215779</example>
        */
        [DataMember(Name = "record_size", EmitDefaultValue = false)]
        public int RecordSize { get; set; }

        /// <summary>
        /// The record&#39;s risk
        /// </summary>
        /// <value>The record&#39;s risk</value>
        /*
        <example>low</example>
        */
        [DataMember(Name = "risk", EmitDefaultValue = false)]
        public string Risk { get; set; }

        /// <summary>
        /// Record upload timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>Record upload timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2022-10-12T02:29:49.146Z</example>
        */
        [DataMember(Name = "upload_date", EmitDefaultValue = false)]
        public DateTime UploadDate { get; set; }

        /// <summary>
        /// The record&#39;s UUID. This UUID matches the portal record ID
        /// </summary>
        /// <value>The record&#39;s UUID. This UUID matches the portal record ID</value>
        /*
        <example>95292686-cbbb-b8c0-0351-25dab7c2154d</example>
        */
        [DataMember(Name = "uuid", EmitDefaultValue = false)]
        public string Uuid { get; set; }

        /// <summary>
        /// A map of key value pairs of the records platform attributes
        /// </summary>
        /// <value>A map of key value pairs of the records platform attributes</value>
        /*
        <example>{&quot;call_id&quot;:&quot;2909b385-f84c-4935-bef0-87e6c6a3939b&quot;,&quot;channel_id&quot;:&quot;4&quot;,&quot;duration&quot;:&quot;1h02m29s&quot;}</example>
        */
        [DataMember(Name = "platform_attributes", EmitDefaultValue = false)]
        public Object PlatformAttributes { get; set; }

        /// <summary>
        /// The record&#39;s participants
        /// </summary>
        /// <value>The record&#39;s participants</value>
        [DataMember(Name = "participants", EmitDefaultValue = true)]
        public Dictionary<string, List<SchemasParticipantInner>> Participants { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostSearchResponseRecordsInner {\n");
            sb.Append("  ContentSource: ").Append(ContentSource).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  HashSha256: ").Append(HashSha256).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  OriginalFileName: ").Append(OriginalFileName).Append("\n");
            sb.Append("  RecordSize: ").Append(RecordSize).Append("\n");
            sb.Append("  Risk: ").Append(Risk).Append("\n");
            sb.Append("  UploadDate: ").Append(UploadDate).Append("\n");
            sb.Append("  Uuid: ").Append(Uuid).Append("\n");
            sb.Append("  PlatformAttributes: ").Append(PlatformAttributes).Append("\n");
            sb.Append("  Participants: ").Append(Participants).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
