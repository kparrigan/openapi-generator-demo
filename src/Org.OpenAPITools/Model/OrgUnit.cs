/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrgUnit
    /// </summary>
    [DataContract(Name = "org_unit")]
    public partial class OrgUnit : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets FallbackLanguage
        /// </summary>
        [DataMember(Name = "fallback_language", EmitDefaultValue = false)]
        public FallbackLanguage? FallbackLanguage { get; set; }
        /// <summary>
        /// Defines PreferredLanguages
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PreferredLanguagesEnum
        {
            /// <summary>
            /// Enum En for value: en
            /// </summary>
            [EnumMember(Value = "en")]
            En = 1,

            /// <summary>
            /// Enum Es for value: es
            /// </summary>
            [EnumMember(Value = "es")]
            Es = 2,

            /// <summary>
            /// Enum Nl for value: nl
            /// </summary>
            [EnumMember(Value = "nl")]
            Nl = 3,

            /// <summary>
            /// Enum De for value: de
            /// </summary>
            [EnumMember(Value = "de")]
            De = 4,

            /// <summary>
            /// Enum Fr for value: fr
            /// </summary>
            [EnumMember(Value = "fr")]
            Fr = 5,

            /// <summary>
            /// Enum It for value: it
            /// </summary>
            [EnumMember(Value = "it")]
            It = 6,

            /// <summary>
            /// Enum Ja for value: ja
            /// </summary>
            [EnumMember(Value = "ja")]
            Ja = 7,

            /// <summary>
            /// Enum Cmn for value: cmn
            /// </summary>
            [EnumMember(Value = "cmn")]
            Cmn = 8,

            /// <summary>
            /// Enum Pt for value: pt
            /// </summary>
            [EnumMember(Value = "pt")]
            Pt = 9
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="OrgUnit" /> class.
        /// </summary>
        /// <param name="allowAnonymousViaSharedLinks">Indicates the ability to share a link to records publicly.</param>
        /// <param name="analysisSupervisionSpaces">Datums matching these spaces will be analyzed for risky behaviors.</param>
        /// <param name="auditLogRetentionPeriod">The duration audit logs for this bucket will be retained.</param>
        /// <param name="bucketName">The assigned bucket for this org unit.</param>
        /// <param name="createdAt">The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        /// <param name="defaultOrgTimezone">The org units default timezone.</param>
        /// <param name="deleteOnExpiration">Indicates if records in this org unit should be deleted when they expire from the archive.</param>
        /// <param name="description">A description for the org unit.</param>
        /// <param name="disabled">Indicates if the org unit is disabled.</param>
        /// <param name="disabledAt">If the org is disabled, the timestamp of when it was disabled, using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)..</param>
        /// <param name="fallbackLanguage">fallbackLanguage.</param>
        /// <param name="id">ID of the org unit.</param>
        /// <param name="name">Name of the Org Unit.</param>
        /// <param name="preferredLanguageList">An array of all preferred languages.</param>
        /// <param name="preferredLanguages">An array of selected preferred languages.</param>
        /// <param name="updatedAt">The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</param>
        /// <param name="useNameMatcher">Indicates if the org unit identity matching algorithm uses names.</param>
        /// <param name="useOwnerOnlySpaceMatcher">Indicates if the org unit identity matching algorithm should stop after owner and then fallback to default.</param>
        /// <param name="users">Users included to this org unit.</param>
        public OrgUnit(bool allowAnonymousViaSharedLinks = default(bool), List<AnalysisSupervisionSpacesInner> analysisSupervisionSpaces = default(List<AnalysisSupervisionSpacesInner>), int? auditLogRetentionPeriod = default(int?), string bucketName = default(string), DateTime createdAt = default(DateTime), string defaultOrgTimezone = default(string), bool deleteOnExpiration = default(bool), string description = default(string), bool disabled = default(bool), string disabledAt = default(string), FallbackLanguage? fallbackLanguage = default(FallbackLanguage?), int id = default(int), string name = default(string), List<OrgUnitPreferredLanguageListInner> preferredLanguageList = default(List<OrgUnitPreferredLanguageListInner>), List<PreferredLanguagesEnum> preferredLanguages = default(List<PreferredLanguagesEnum>), DateTime updatedAt = default(DateTime), bool useNameMatcher = default(bool), bool useOwnerOnlySpaceMatcher = default(bool), List<OrgUnitUsersInner> users = default(List<OrgUnitUsersInner>))
        {
            this.AllowAnonymousViaSharedLinks = allowAnonymousViaSharedLinks;
            this.AnalysisSupervisionSpaces = analysisSupervisionSpaces;
            this.AuditLogRetentionPeriod = auditLogRetentionPeriod;
            this.BucketName = bucketName;
            this.CreatedAt = createdAt;
            this.DefaultOrgTimezone = defaultOrgTimezone;
            this.DeleteOnExpiration = deleteOnExpiration;
            this.Description = description;
            this.Disabled = disabled;
            this.DisabledAt = disabledAt;
            this.FallbackLanguage = fallbackLanguage;
            this.Id = id;
            this.Name = name;
            this.PreferredLanguageList = preferredLanguageList;
            this.PreferredLanguages = preferredLanguages;
            this.UpdatedAt = updatedAt;
            this.UseNameMatcher = useNameMatcher;
            this.UseOwnerOnlySpaceMatcher = useOwnerOnlySpaceMatcher;
            this.Users = users;
        }

        /// <summary>
        /// Indicates the ability to share a link to records publicly
        /// </summary>
        /// <value>Indicates the ability to share a link to records publicly</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "allow_anonymous_via_shared_links", EmitDefaultValue = true)]
        public bool AllowAnonymousViaSharedLinks { get; set; }

        /// <summary>
        /// Datums matching these spaces will be analyzed for risky behaviors
        /// </summary>
        /// <value>Datums matching these spaces will be analyzed for risky behaviors</value>
        [DataMember(Name = "analysis_supervision_spaces", EmitDefaultValue = false)]
        public List<AnalysisSupervisionSpacesInner> AnalysisSupervisionSpaces { get; set; }

        /// <summary>
        /// The duration audit logs for this bucket will be retained
        /// </summary>
        /// <value>The duration audit logs for this bucket will be retained</value>
        [DataMember(Name = "audit_log_retention_period", EmitDefaultValue = true)]
        public int? AuditLogRetentionPeriod { get; set; }

        /// <summary>
        /// The assigned bucket for this org unit
        /// </summary>
        /// <value>The assigned bucket for this org unit</value>
        /*
        <example>datums-dev1-000000001-theta-lake</example>
        */
        [DataMember(Name = "bucket_name", EmitDefaultValue = false)]
        public string BucketName { get; set; }

        /// <summary>
        /// The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>The created timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2021-06-16T01:37:04.262Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// The org units default timezone
        /// </summary>
        /// <value>The org units default timezone</value>
        /*
        <example>Etc/UTC</example>
        */
        [DataMember(Name = "default_org_timezone", EmitDefaultValue = false)]
        public string DefaultOrgTimezone { get; set; }

        /// <summary>
        /// Indicates if records in this org unit should be deleted when they expire from the archive
        /// </summary>
        /// <value>Indicates if records in this org unit should be deleted when they expire from the archive</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "delete_on_expiration", EmitDefaultValue = true)]
        public bool DeleteOnExpiration { get; set; }

        /// <summary>
        /// A description for the org unit
        /// </summary>
        /// <value>A description for the org unit</value>
        /*
        <example>Fake Bank - East Asia Regional</example>
        */
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Indicates if the org unit is disabled
        /// </summary>
        /// <value>Indicates if the org unit is disabled</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "disabled", EmitDefaultValue = true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// If the org is disabled, the timestamp of when it was disabled, using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        /// </summary>
        /// <value>If the org is disabled, the timestamp of when it was disabled, using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).</value>
        [DataMember(Name = "disabled_at", EmitDefaultValue = true)]
        public string DisabledAt { get; set; }

        /// <summary>
        /// ID of the org unit
        /// </summary>
        /// <value>ID of the org unit</value>
        /*
        <example>108</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Name of the Org Unit
        /// </summary>
        /// <value>Name of the Org Unit</value>
        /*
        <example>East Region Sales</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// An array of all preferred languages
        /// </summary>
        /// <value>An array of all preferred languages</value>
        /*
        <example>[{&quot;code&quot;:&quot;en&quot;,&quot;label&quot;:&quot;English&quot;},{&quot;code&quot;:&quot;es&quot;,&quot;label&quot;:&quot;Spanish&quot;},{&quot;code&quot;:&quot;nl&quot;,&quot;label&quot;:&quot;Dutch&quot;},{&quot;code&quot;:&quot;de&quot;,&quot;label&quot;:&quot;German&quot;},{&quot;code&quot;:&quot;fr&quot;,&quot;label&quot;:&quot;French&quot;},{&quot;code&quot;:&quot;it&quot;,&quot;label&quot;:&quot;Italian&quot;},{&quot;code&quot;:&quot;ja&quot;,&quot;label&quot;:&quot;Japanese&quot;},{&quot;code&quot;:&quot;cmn&quot;,&quot;label&quot;:&quot;Mandarin&quot;},{&quot;code&quot;:&quot;pt&quot;,&quot;label&quot;:&quot;Portuguese&quot;}]</example>
        */
        [DataMember(Name = "preferred_language_list", EmitDefaultValue = false)]
        public List<OrgUnitPreferredLanguageListInner> PreferredLanguageList { get; set; }

        /// <summary>
        /// An array of selected preferred languages
        /// </summary>
        /// <value>An array of selected preferred languages</value>
        /*
        <example>[&quot;en&quot;,&quot;nl&quot;,&quot;de&quot;]</example>
        */
        [DataMember(Name = "preferred_languages", EmitDefaultValue = false)]
        public List<OrgUnit.PreferredLanguagesEnum> PreferredLanguages { get; set; }

        /// <summary>
        /// The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        /// </summary>
        /// <value>The updated timestamp using the [RFC3339 date-time format](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)</value>
        /*
        <example>2022-10-12T02:29:49.146Z</example>
        */
        [DataMember(Name = "updated_at", EmitDefaultValue = false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Indicates if the org unit identity matching algorithm uses names
        /// </summary>
        /// <value>Indicates if the org unit identity matching algorithm uses names</value>
        /*
        <example>true</example>
        */
        [DataMember(Name = "use_name_matcher", EmitDefaultValue = true)]
        public bool UseNameMatcher { get; set; }

        /// <summary>
        /// Indicates if the org unit identity matching algorithm should stop after owner and then fallback to default
        /// </summary>
        /// <value>Indicates if the org unit identity matching algorithm should stop after owner and then fallback to default</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "use_owner_only_space_matcher", EmitDefaultValue = true)]
        public bool UseOwnerOnlySpaceMatcher { get; set; }

        /// <summary>
        /// Users included to this org unit
        /// </summary>
        /// <value>Users included to this org unit</value>
        [DataMember(Name = "users", EmitDefaultValue = false)]
        public List<OrgUnitUsersInner> Users { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrgUnit {\n");
            sb.Append("  AllowAnonymousViaSharedLinks: ").Append(AllowAnonymousViaSharedLinks).Append("\n");
            sb.Append("  AnalysisSupervisionSpaces: ").Append(AnalysisSupervisionSpaces).Append("\n");
            sb.Append("  AuditLogRetentionPeriod: ").Append(AuditLogRetentionPeriod).Append("\n");
            sb.Append("  BucketName: ").Append(BucketName).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  DefaultOrgTimezone: ").Append(DefaultOrgTimezone).Append("\n");
            sb.Append("  DeleteOnExpiration: ").Append(DeleteOnExpiration).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Disabled: ").Append(Disabled).Append("\n");
            sb.Append("  DisabledAt: ").Append(DisabledAt).Append("\n");
            sb.Append("  FallbackLanguage: ").Append(FallbackLanguage).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PreferredLanguageList: ").Append(PreferredLanguageList).Append("\n");
            sb.Append("  PreferredLanguages: ").Append(PreferredLanguages).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  UseNameMatcher: ").Append(UseNameMatcher).Append("\n");
            sb.Append("  UseOwnerOnlySpaceMatcher: ").Append(UseOwnerOnlySpaceMatcher).Append("\n");
            sb.Append("  Users: ").Append(Users).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
