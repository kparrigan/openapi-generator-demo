/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Defines AuditableType
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AuditableType
    {
        /// <summary>
        /// Enum ApiKey for value: ApiKey
        /// </summary>
        [EnumMember(Value = "ApiKey")]
        ApiKey = 1,

        /// <summary>
        /// Enum AuditReport for value: AuditReport
        /// </summary>
        [EnumMember(Value = "AuditReport")]
        AuditReport = 2,

        /// <summary>
        /// Enum Case for value: Case
        /// </summary>
        [EnumMember(Value = "Case")]
        Case = 3,

        /// <summary>
        /// Enum Category for value: Category
        /// </summary>
        [EnumMember(Value = "Category")]
        Category = 4,

        /// <summary>
        /// Enum ClassifierAuditReport for value: ClassifierAuditReport
        /// </summary>
        [EnumMember(Value = "ClassifierAuditReport")]
        ClassifierAuditReport = 5,

        /// <summary>
        /// Enum Comment for value: Comment
        /// </summary>
        [EnumMember(Value = "Comment")]
        Comment = 6,

        /// <summary>
        /// Enum Customer for value: Customer
        /// </summary>
        [EnumMember(Value = "Customer")]
        Customer = 7,

        /// <summary>
        /// Enum Datum for value: Datum
        /// </summary>
        [EnumMember(Value = "Datum")]
        Datum = 8,

        /// <summary>
        /// Enum DetectionRequest for value: DetectionRequest
        /// </summary>
        [EnumMember(Value = "DetectionRequest")]
        DetectionRequest = 9,

        /// <summary>
        /// Enum DirectoryGroup for value: DirectoryGroup
        /// </summary>
        [EnumMember(Value = "DirectoryGroup")]
        DirectoryGroup = 10,

        /// <summary>
        /// Enum DisclaimerGroup for value: DisclaimerGroup
        /// </summary>
        [EnumMember(Value = "DisclaimerGroup")]
        DisclaimerGroup = 11,

        /// <summary>
        /// Enum EntryStrategy for value: EntryStrategy
        /// </summary>
        [EnumMember(Value = "EntryStrategy")]
        EntryStrategy = 12,

        /// <summary>
        /// Enum InformationBarrier for value: InformationBarrier
        /// </summary>
        [EnumMember(Value = "InformationBarrier")]
        InformationBarrier = 13,

        /// <summary>
        /// Enum Integration for value: Integration
        /// </summary>
        [EnumMember(Value = "Integration")]
        Integration = 14,

        /// <summary>
        /// Enum License for value: License
        /// </summary>
        [EnumMember(Value = "License")]
        License = 15,

        /// <summary>
        /// Enum MicrosoftTeamsDisclaimer for value: MicrosoftTeamsDisclaimer
        /// </summary>
        [EnumMember(Value = "MicrosoftTeamsDisclaimer")]
        MicrosoftTeamsDisclaimer = 16,

        /// <summary>
        /// Enum OrgUnit for value: OrgUnit
        /// </summary>
        [EnumMember(Value = "OrgUnit")]
        OrgUnit = 17,

        /// <summary>
        /// Enum Policy for value: Policy
        /// </summary>
        [EnumMember(Value = "Policy")]
        Policy = 18,

        /// <summary>
        /// Enum RcaInstall for value: RcaInstall
        /// </summary>
        [EnumMember(Value = "RcaInstall")]
        RcaInstall = 19,

        /// <summary>
        /// Enum RetentionLibrary for value: RetentionLibrary
        /// </summary>
        [EnumMember(Value = "RetentionLibrary")]
        RetentionLibrary = 20,

        /// <summary>
        /// Enum Role for value: Role
        /// </summary>
        [EnumMember(Value = "Role")]
        Role = 21,

        /// <summary>
        /// Enum Saml for value: Saml
        /// </summary>
        [EnumMember(Value = "Saml")]
        Saml = 22,

        /// <summary>
        /// Enum Search for value: Search
        /// </summary>
        [EnumMember(Value = "Search")]
        Search = 23,

        /// <summary>
        /// Enum StorageAccount for value: StorageAccount
        /// </summary>
        [EnumMember(Value = "StorageAccount")]
        StorageAccount = 24,

        /// <summary>
        /// Enum SupervisionSpace for value: SupervisionSpace
        /// </summary>
        [EnumMember(Value = "SupervisionSpace")]
        SupervisionSpace = 25,

        /// <summary>
        /// Enum UploadToolConfig for value: UploadToolConfig
        /// </summary>
        [EnumMember(Value = "UploadToolConfig")]
        UploadToolConfig = 26,

        /// <summary>
        /// Enum User for value: User
        /// </summary>
        [EnumMember(Value = "User")]
        User = 27,

        /// <summary>
        /// Enum UserGroup for value: UserGroup
        /// </summary>
        [EnumMember(Value = "UserGroup")]
        UserGroup = 28,

        /// <summary>
        /// Enum Workflow for value: Workflow
        /// </summary>
        [EnumMember(Value = "Workflow")]
        Workflow = 29
    }

}
