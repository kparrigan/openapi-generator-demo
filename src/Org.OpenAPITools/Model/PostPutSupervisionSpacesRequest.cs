/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// PostPutSupervisionSpacesRequest
    /// </summary>
    [DataContract(Name = "PostPutSupervisionSpacesRequest")]
    public partial class PostPutSupervisionSpacesRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostPutSupervisionSpacesRequest" /> class.
        /// </summary>
        /// <param name="name">The supervision space name.</param>
        /// <param name="description">The description of the supervision space given when created.</param>
        /// <param name="allParticipants">Indicates if the supervision space should allow adding all participants, creating a catch all space for participants. Only one supervision space can have all participants enabled..</param>
        /// <param name="allUsers">Indicates if the supervision space should allow adding all users.</param>
        /// <param name="supervisionSpacePriority">The priority of assigning records to a supervision space.</param>
        /// <param name="hardEnforce">Indicates if users can be assigned records from other supervision spaces.</param>
        /// <param name="retentionLibraryIds">An array of retention library IDs to associate with this supervision space.</param>
        /// <param name="directoryGroupIds">An array of directory group IDs to associate with this supervision space.</param>
        /// <param name="integrationIds">An array of integration IDs to associate with this supervision space.</param>
        /// <param name="mediaTypeIds">An array of media type IDs to associate with this supervision space,.</param>
        public PostPutSupervisionSpacesRequest(string name = default(string), string description = default(string), bool allParticipants = default(bool), bool allUsers = default(bool), int supervisionSpacePriority = default(int), bool hardEnforce = default(bool), List<int> retentionLibraryIds = default(List<int>), List<int> directoryGroupIds = default(List<int>), List<int> integrationIds = default(List<int>), List<int> mediaTypeIds = default(List<int>))
        {
            this.Name = name;
            this.Description = description;
            this.AllParticipants = allParticipants;
            this.AllUsers = allUsers;
            this.SupervisionSpacePriority = supervisionSpacePriority;
            this.HardEnforce = hardEnforce;
            this.RetentionLibraryIds = retentionLibraryIds;
            this.DirectoryGroupIds = directoryGroupIds;
            this.IntegrationIds = integrationIds;
            this.MediaTypeIds = mediaTypeIds;
        }

        /// <summary>
        /// The supervision space name
        /// </summary>
        /// <value>The supervision space name</value>
        /*
        <example>Central Time</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// The description of the supervision space given when created
        /// </summary>
        /// <value>The description of the supervision space given when created</value>
        /*
        <example>All central time employees</example>
        */
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Indicates if the supervision space should allow adding all participants, creating a catch all space for participants. Only one supervision space can have all participants enabled.
        /// </summary>
        /// <value>Indicates if the supervision space should allow adding all participants, creating a catch all space for participants. Only one supervision space can have all participants enabled.</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "all_participants", EmitDefaultValue = true)]
        public bool AllParticipants { get; set; }

        /// <summary>
        /// Indicates if the supervision space should allow adding all users
        /// </summary>
        /// <value>Indicates if the supervision space should allow adding all users</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "all_users", EmitDefaultValue = true)]
        public bool AllUsers { get; set; }

        /// <summary>
        /// The priority of assigning records to a supervision space
        /// </summary>
        /// <value>The priority of assigning records to a supervision space</value>
        /*
        <example>3</example>
        */
        [DataMember(Name = "supervision_space_priority", EmitDefaultValue = false)]
        public int SupervisionSpacePriority { get; set; }

        /// <summary>
        /// Indicates if users can be assigned records from other supervision spaces
        /// </summary>
        /// <value>Indicates if users can be assigned records from other supervision spaces</value>
        /*
        <example>false</example>
        */
        [DataMember(Name = "hard_enforce", EmitDefaultValue = true)]
        public bool HardEnforce { get; set; }

        /// <summary>
        /// An array of retention library IDs to associate with this supervision space
        /// </summary>
        /// <value>An array of retention library IDs to associate with this supervision space</value>
        /*
        <example>[1,238]</example>
        */
        [DataMember(Name = "retention_library_ids", EmitDefaultValue = false)]
        public List<int> RetentionLibraryIds { get; set; }

        /// <summary>
        /// An array of directory group IDs to associate with this supervision space
        /// </summary>
        /// <value>An array of directory group IDs to associate with this supervision space</value>
        /*
        <example>[1988,1989]</example>
        */
        [DataMember(Name = "directory_group_ids", EmitDefaultValue = false)]
        public List<int> DirectoryGroupIds { get; set; }

        /// <summary>
        /// An array of integration IDs to associate with this supervision space
        /// </summary>
        /// <value>An array of integration IDs to associate with this supervision space</value>
        /*
        <example>[302,304,305]</example>
        */
        [DataMember(Name = "integration_ids", EmitDefaultValue = false)]
        public List<int> IntegrationIds { get; set; }

        /// <summary>
        /// An array of media type IDs to associate with this supervision space,
        /// </summary>
        /// <value>An array of media type IDs to associate with this supervision space,</value>
        /*
        <example>[1,2,3,4,5]</example>
        */
        [DataMember(Name = "media_type_ids", EmitDefaultValue = false)]
        public List<int> MediaTypeIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostPutSupervisionSpacesRequest {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  AllParticipants: ").Append(AllParticipants).Append("\n");
            sb.Append("  AllUsers: ").Append(AllUsers).Append("\n");
            sb.Append("  SupervisionSpacePriority: ").Append(SupervisionSpacePriority).Append("\n");
            sb.Append("  HardEnforce: ").Append(HardEnforce).Append("\n");
            sb.Append("  RetentionLibraryIds: ").Append(RetentionLibraryIds).Append("\n");
            sb.Append("  DirectoryGroupIds: ").Append(DirectoryGroupIds).Append("\n");
            sb.Append("  IntegrationIds: ").Append(IntegrationIds).Append("\n");
            sb.Append("  MediaTypeIds: ").Append(MediaTypeIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
