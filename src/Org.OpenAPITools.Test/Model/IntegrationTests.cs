/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing Integration
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IntegrationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Integration
        //private Integration instance;

        public IntegrationTests()
        {
            // TODO uncomment below to create an instance of Integration
            //instance = new Integration();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Integration
        /// </summary>
        [Fact]
        public void IntegrationInstanceTest()
        {
            // TODO uncomment below to test "IsType" Integration
            //Assert.IsType<Integration>(instance);
        }

        /// <summary>
        /// Test the property 'AccessTokenExpirationDate'
        /// </summary>
        [Fact]
        public void AccessTokenExpirationDateTest()
        {
            // TODO unit test for the property 'AccessTokenExpirationDate'
        }

        /// <summary>
        /// Test the property 'AccountUserEmail'
        /// </summary>
        [Fact]
        public void AccountUserEmailTest()
        {
            // TODO unit test for the property 'AccountUserEmail'
        }

        /// <summary>
        /// Test the property 'AccountUserId'
        /// </summary>
        [Fact]
        public void AccountUserIdTest()
        {
            // TODO unit test for the property 'AccountUserId'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'HasIntegrationPolicy'
        /// </summary>
        [Fact]
        public void HasIntegrationPolicyTest()
        {
            // TODO unit test for the property 'HasIntegrationPolicy'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'IntegrationGroup'
        /// </summary>
        [Fact]
        public void IntegrationGroupTest()
        {
            // TODO unit test for the property 'IntegrationGroup'
        }

        /// <summary>
        /// Test the property 'IntegrationPolicyId'
        /// </summary>
        [Fact]
        public void IntegrationPolicyIdTest()
        {
            // TODO unit test for the property 'IntegrationPolicyId'
        }

        /// <summary>
        /// Test the property 'IntegrationType'
        /// </summary>
        [Fact]
        public void IntegrationTypeTest()
        {
            // TODO unit test for the property 'IntegrationType'
        }

        /// <summary>
        /// Test the property 'IntegrationTypeId'
        /// </summary>
        [Fact]
        public void IntegrationTypeIdTest()
        {
            // TODO unit test for the property 'IntegrationTypeId'
        }

        /// <summary>
        /// Test the property 'LastUploadAt'
        /// </summary>
        [Fact]
        public void LastUploadAtTest()
        {
            // TODO unit test for the property 'LastUploadAt'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'NotBeforeDate'
        /// </summary>
        [Fact]
        public void NotBeforeDateTest()
        {
            // TODO unit test for the property 'NotBeforeDate'
        }

        /// <summary>
        /// Test the property 'NotifySubmitter'
        /// </summary>
        [Fact]
        public void NotifySubmitterTest()
        {
            // TODO unit test for the property 'NotifySubmitter'
        }

        /// <summary>
        /// Test the property 'ScopesChanged'
        /// </summary>
        [Fact]
        public void ScopesChangedTest()
        {
            // TODO unit test for the property 'ScopesChanged'
        }

        /// <summary>
        /// Test the property 'ServiceLastRunAt'
        /// </summary>
        [Fact]
        public void ServiceLastRunAtTest()
        {
            // TODO unit test for the property 'ServiceLastRunAt'
        }

        /// <summary>
        /// Test the property 'ServicePaused'
        /// </summary>
        [Fact]
        public void ServicePausedTest()
        {
            // TODO unit test for the property 'ServicePaused'
        }

        /// <summary>
        /// Test the property 'ServiceStatus'
        /// </summary>
        [Fact]
        public void ServiceStatusTest()
        {
            // TODO unit test for the property 'ServiceStatus'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'StatusColor'
        /// </summary>
        [Fact]
        public void StatusColorTest()
        {
            // TODO unit test for the property 'StatusColor'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'UploadsLast30Days'
        /// </summary>
        [Fact]
        public void UploadsLast30DaysTest()
        {
            // TODO unit test for the property 'UploadsLast30Days'
        }

        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Fact]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
    }
}
