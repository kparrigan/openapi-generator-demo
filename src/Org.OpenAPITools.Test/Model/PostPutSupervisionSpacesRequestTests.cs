/*
 * Theta Lake API
 *
 * We are excited to inform you that our documentation is interactive!  If you are logged in, this means that you can not only read about the features and capabilities of our product, but also try them out directly from the documentation pages. Our interactive documentation provides a hands-on experience that allows you to test the API endpoints, experiment with the input parameters, and see the corresponding responses. This makes it easier to understand how the API works and how to integrate it into your own applications. With interactive documentation, you can save time and avoid frustration by testing the API right from the documentation pages, without having to set up a local development environment. Whether you're a seasoned developer or just starting out, our interactive documentation is the perfect tool to help you learn, experiment, and succeed with our API. 
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PostPutSupervisionSpacesRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostPutSupervisionSpacesRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostPutSupervisionSpacesRequest
        //private PostPutSupervisionSpacesRequest instance;

        public PostPutSupervisionSpacesRequestTests()
        {
            // TODO uncomment below to create an instance of PostPutSupervisionSpacesRequest
            //instance = new PostPutSupervisionSpacesRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostPutSupervisionSpacesRequest
        /// </summary>
        [Fact]
        public void PostPutSupervisionSpacesRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostPutSupervisionSpacesRequest
            //Assert.IsType<PostPutSupervisionSpacesRequest>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'AllParticipants'
        /// </summary>
        [Fact]
        public void AllParticipantsTest()
        {
            // TODO unit test for the property 'AllParticipants'
        }

        /// <summary>
        /// Test the property 'AllUsers'
        /// </summary>
        [Fact]
        public void AllUsersTest()
        {
            // TODO unit test for the property 'AllUsers'
        }

        /// <summary>
        /// Test the property 'SupervisionSpacePriority'
        /// </summary>
        [Fact]
        public void SupervisionSpacePriorityTest()
        {
            // TODO unit test for the property 'SupervisionSpacePriority'
        }

        /// <summary>
        /// Test the property 'HardEnforce'
        /// </summary>
        [Fact]
        public void HardEnforceTest()
        {
            // TODO unit test for the property 'HardEnforce'
        }

        /// <summary>
        /// Test the property 'RetentionLibraryIds'
        /// </summary>
        [Fact]
        public void RetentionLibraryIdsTest()
        {
            // TODO unit test for the property 'RetentionLibraryIds'
        }

        /// <summary>
        /// Test the property 'DirectoryGroupIds'
        /// </summary>
        [Fact]
        public void DirectoryGroupIdsTest()
        {
            // TODO unit test for the property 'DirectoryGroupIds'
        }

        /// <summary>
        /// Test the property 'IntegrationIds'
        /// </summary>
        [Fact]
        public void IntegrationIdsTest()
        {
            // TODO unit test for the property 'IntegrationIds'
        }

        /// <summary>
        /// Test the property 'MediaTypeIds'
        /// </summary>
        [Fact]
        public void MediaTypeIdsTest()
        {
            // TODO unit test for the property 'MediaTypeIds'
        }
    }
}
